---
interface Tabs {
  tabs?: Array<string>;
  onClick?: () => void;
}

const { tabs = [], onClick } = Astro.props;
---

<nav class="tabs-nav">
  {
    tabs.map((el: string, index: number) => {
      return (
        <a class="nav-item" href="javascript:void(0);">
          {el}
        </a>
      );
    })
  }
</nav>

<style scoped>
  .tabs-nav {
    display: flex;
    justify-content: space-between;
    text-align: center;
    padding: 0.5rem;
    color: var(--var_off-white);
    background-color: var(--var_pitch-black);
    outline: var(--var_border-width) solid var(--var_off-white);
    outline-offset: calc(0px - var(--var_border-width) * 3);
  }

  .tabs-nav .nav-item {
    flex: 1;
    color: var(--var_off-white);
    text-decoration: none;
  }

  .tabs-nav .nav-item.active {
    border-radius: var(--var_border-width);
    background-color: var(--var_red);
  }
</style>

<script define:vars={{ onClick }}>
  const clickActive = (event) => {
    const target = event.target;
    onClick?.()
    if (!target) {
      return;
    }
    navItems.forEach((el) => {
      el.classList.remove("active");
    });
    target.classList?.toggle("active");
  };

  const navItems = document.querySelectorAll(".nav-item");
  navItems.forEach((el) => {
    el.addEventListener("click", clickActive);
  });
</script>
